#-------------------------------------------------------------------------------
#  Pi.Alert
#  Open Source Network Guard / WIFI & LAN intrusion detector 
#
#  pialert.conf - Back module. Configuration file
#-------------------------------------------------------------------------------
#  Puche 2021        pi.alert.application@gmail.com        GNU GPLv3
#-------------------------------------------------------------------------------

# General Pi.Alert settings
PIALERT_PATH      = '/home/pi/pialert'
DB_PATH           = PIALERT_PATH + '/db/pialert.db'
LOG_PATH          = PIALERT_PATH + '/log'
VENDORS_DB        = '/usr/share/arp-scan/ieee-oui.txt'
PRINT_LOG         = False
# QUERY_MYIP_SERVER = 'https://diagnostic.opendns.com/myip'
QUERY_MYIP_SERVER = 'http://ipv4.icanhazip.com'

# PiHole settings
PIHOLE_ACTIVE     = False
PIHOLE_DB         = '/etc/pihole/pihole-FTL.db'
DHCP_ACTIVE       = False
DHCP_LEASES       = '/etc/pihole/dhcp.leases'

# DDNS settings
DDNS_ACTIVE       = False
DDNS_DOMAIN       = 'your_domain.freeddns.org'
DDNS_USER         = 'dynu_user'
DDNS_PASSWORD     = 'A0000000B0000000C0000000D0000000'
DDNS_UPDATE_URL   = 'https://api.dynu.com/nic/update?'

# Email SMTP settings
SMTP_SERVER       = 'smtp.gmail.com'
SMTP_PORT         = 587
SMTP_USER         = 'user@gmail.com'
SMTP_PASS         = 'password'

# Notification settings
REPORT_MAIL       = False
REPORT_WEBHOOK    = False
REPORT_NTFY       = False
REPORT_DASHBOARD_URL = 'http://pi.alert/'

# Email Notification Settings
REPORT_FROM       = 'Pi.Alert <' + SMTP_USER +'>'
REPORT_TO         = 'user@gmail.com'
REPORT_DEVICE_URL = 'http://pi.alert/deviceDetails.php?mac='

# Webhook Settings
# if Discord: Add /slack after the url
WEBHOOK_URL       = 'https://discord.com/api/webhooks/WEBHOOK_KEY/slack'
WEBHOOK_FROM      = REPORT_FROM

# Ntfy Settings
NTFY_TOPIC        = 'replace_my_secure_topicname_91h889f28'

# Scan settings
# arp-scan options & samples
#
# Scan local network (default)
# SCAN_SUBNETS    = '--localnet'
#
# Scan two subnets
# SCAN_SUBNETS    = '192.168.11.0/24 192.168.144.0/24'
#
# Scan using interface eth0
# SCAN_SUBNETS    = '--localnet --interface=eth0'
#
# Scan from Docker
# SCAN_SUBNETS    = '192.168.11.0/24 --interface=br0'

SCAN_SUBNETS      = '--localnet'

# nmap options & samples
#
# Scan local networks (default)
# NMAP_OPTIONS      = ''
#
# Scan single subnet
# NMAP_OPTIONS      = '192.168.11.0/24'
#
# Scan two subnets
# NMAP_OPTIONS      = '192.168.11.0/24 192.168.144.0/24'

NMAP_OPTIONS      = ''
